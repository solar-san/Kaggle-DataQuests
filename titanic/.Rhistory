),
geom = "text",
layout.exp = .1,
nbreaks = 5,
color = "grey30",
size = 5,
family = "Atkinson Hyperlegible",
legend.position = "top",
) +
theme(
legend.text = element_text(
size = 14,
),
)
cor_bygender_male <- train_data %>%
filter(
Sex == "Male"
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
nbreaks = 5,
color = "white",
legend.position = "none"
)
cor_bygender_female / cor_bygender_male
cor_bygender_female <- train_data %>%
filter(
Sex == "Female"
) %>%
select(
-PassengerId
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
layout.exp = .05,
nbreaks = 5,
color = "grey30",
size = 5,
family = "Atkinson Hyperlegible",
legend.position = "top",
) +
theme(
legend.text = element_text(
size = 14,
),
)
cor_bygender_male <- train_data %>%
filter(
Sex == "Male"
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
nbreaks = 5,
color = "white",
legend.position = "none"
)
cor_bygender_female / cor_bygender_male
cor_bygender_female <- train_data %>%
filter(
Sex == "Female"
) %>%
select(
-PassengerId
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
layout.exp = .5,
nbreaks = 5,
color = "grey30",
size = 5,
family = "Atkinson Hyperlegible",
legend.position = "top",
) +
theme(
legend.text = element_text(
size = 14,
),
)
cor_bygender_male <- train_data %>%
filter(
Sex == "Male"
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
nbreaks = 5,
color = "white",
legend.position = "none"
)
cor_bygender_female / cor_bygender_male
cor_bygender_female <- train_data %>%
filter(
Sex == "Female"
) %>%
select(
-PassengerId
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
layout.exp = 1,
nbreaks = 5,
color = "grey30",
size = 5,
family = "Atkinson Hyperlegible",
legend.position = "top",
) +
theme(
legend.text = element_text(
size = 14,
),
)
cor_bygender_male <- train_data %>%
filter(
Sex == "Male"
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
nbreaks = 5,
color = "white",
legend.position = "none"
)
cor_bygender_female / cor_bygender_male
knitr::opts_chunk$set(
echo = TRUE
)
requirements <- c(
"MASS",
"tidyverse",
"glmnet",
"ggthemes",
"patchwork"
)
submission_flag = FALSE
lapply(
requirements,
library,
character.only = T)
theme_set(
theme_tufte(
base_size = 12,
base_family = 'Atkinson Hyperlegible',
ticks = F
)
)
source("helper_functions.R")
train_data <- data_loader(
"titanic.zip",
"train.csv"
)
test_data <- data_loader(
"titanic.zip",
"test.csv"
)
train_data %>% str
test_data %>% str
train_data <- train_data %>%
mutate(
Age = scale(Age),
Fare = scale(Fare),
SibSp = scale(SibSp),
Parch = scale(Parch),
Sex = ifelse(
Sex == "male",
"Male",
ifelse(Sex == "female",
"Female",
NA
)
)
)
test_data <- test_data %>%
mutate(
Age = scale(Age),
Fare = scale(Fare),
SibSp = scale(SibSp),
Parch = scale(Parch),
Sex = ifelse(
Sex == "male",
"Male",
"Female"
)
)
train_data %>% summary
N_train_obs <- dim(train_data)[1]
train_idx <- sample(
N_train_obs,
N_train_obs*.5
)
factorize_data <- function(dataframe) {
dataframe %>%
select(-Name, -Ticket) %>%
mutate(
Pclass = as.factor(Pclass),
Sex = as.factor(Sex),
# SibSp = as.factor(SibSp),
# Parch = as.factor(Parch),
Cabin = as.factor(Cabin),
Embarked = as.factor(Embarked)
)
}
train_data_factorized <- factorize_data(dataframe = train_data)
test_data_factorized <- factorize_data(dataframe = test_data)
train_data_factorized %>% summary
quantiles_table <- train_data %>%
factorize_data() %>%
group_by(
Sex,
Pclass
) %>%
reframe(
Age_Quantiles = quantile(
de_scale(
Age
),
probs = c(
.25,
.5,
.75
),
na.rm = T
) %>%
round(
.,
digits = 0
)
) %>%
mutate(
Quantile = rep(
c(
.25,
.50,
.75
),
6
)
)
quantiles_table
cor_bygender_female <- train_data %>%
filter(
Sex == "Female"
) %>%
select(
-PassengerId
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
layout.exp = 1,
nbreaks = 5,
color = "grey30",
size = 5,
family = "Atkinson Hyperlegible",
legend.position = "top",
) +
labs(
title = "Correlation Matrices"
) +
theme(
legend.text = element_text(
size = 14,
),
)
cor_bygender_male <- train_data %>%
filter(
Sex == "Male"
) %>%
GGally::ggcorr(
method = c(
"complete.obs",
"pearson"
),
geom = "text",
nbreaks = 5,
color = "white",
legend.position = "none"
)
cor_bygender_female / cor_bygender_male
train_data %>%
factorize_data() %>%
ggplot(
aes(
fill = factor(
ifelse(
Survived == 1,
"Yes",
"No"
)
),
x = de_scale(SibSp),
y = Age/100
)
) +
geom_bar(
width = .7,
stat = "identity"
) +
geom_hline(
yintercept = mean(
train_data$Age,
na.rm = T
), col="grey99",
lwd = 1,
) +
facet_wrap(
vars(
Sex,
ifelse(
Pclass == 1,
"First Class",
ifelse(
Pclass == 2,
"Second Class",
"Third Class"
)
)
)
) +
scale_color_viridis_d(
aesthetics = c(
"colour",
"fill"),
option = "A",
begin = 0,
end = 0.6
) +
labs(
title = "Survivorship on the Titanic based on Number of Siblings, Age, Class, and Gender",
fill = "Survived",
x = "Number of Siblings",
y = "Age (Normalized)"
) +
theme_tufte(
base_size = 16,
base_family = "Atkinson Hyperlegible"
) +
theme(
legend.position = "top",
)
train_data %>%
factorize_data() %>%
mutate(
Survived = factor(
ifelse(
Survived == 1,
"Yes",
"No"
)
),
PClass = ifelse(
Pclass == 1,
"First Class",
ifelse(
Pclass == 2,
"Second Class",
"Third Class"
)
)
) %>%
ggplot(
aes(
x = Survived,
y = Age %>% de_scale()
)
) +
geom_tufteboxplot(
median.type = "line",
whisker.type = "point",
size = 2,
na.rm = T
) +
coord_flip() +
facet_grid(
vars(
Sex,
Pclass)
) +
scale_color_viridis_d(
aesthetics = c(
"colour",
"fill"),
option = "A",
begin = .6,
end = 0
) +
labs(
title = "Distributions of Survivorship | Age, Sex, Class",
y = "Age",
caption = "On the left side: if the passenger survived. On the left: class (1, 2, 3) and gender."
) +
theme(
legend.position = "top"
) +
theme_tufte(
base_size = 18,
base_family = "Atkinson Hyperlegible"
)
fit_full <- glm(
Survived ~ .,
data = train_data_factorized,
family = "binomial",
na.action = na.omit,
subset = train_idx
)
fit_full %>% summary
fit_null <- glm(
Survived ~ 1,
data = train_data_factorized,
family = "binomial",
na.action = na.omit,
subset = train_idx
)
sel_stepwise <- step(
fit_full,
scope = c(fit_null, fit_full),
direction = "both",
k = log(
dim(train_data_factorized)[1]
)
)
sel_stepwise %>% summary()
sel_stepwise <- update(
sel_stepwise,
formula = Survived ~ Pclass*Sex*Age + SibSp,
subset = train_idx
)
sel_stepwise %>% summary()
convert_to_prob <- function(logit) {
exp(logit)/(1+exp(logit))
}
sel_stepwise %>% coef() %>% convert_to_prob()
predictions <-
ifelse(
predict(
sel_stepwise,
newdata = train_data_factorized[-train_idx, ],
type = "response"
) > 0.7293,
1,
0
)
pROC::roc(
train_data_factorized[-train_idx, ]$Survived,
predictions,
)
pROC::ggroc(
pROC::roc(
train_data_factorized[-train_idx, ]$Survived,
predictions,
)
) +
geom_abline(
aes(
slope = 1,
intercept = 1
),
color = "grey90"
)
mean(predictions == train_data_factorized[-train_idx, ]$Survived, na.rm = TRUE )
predictions_test <- ifelse(
predict(
sel_stepwise,
newdata = test_data_factorized,
type = "response"
) > 0.7293,
1,
0
)
if(submission_flag == T) {
submission <- data.frame(
PassengerId = test_data %>%
select(PassengerId),
Survived = predictions_test
)
submission %>% head
}
if(submission_flag == T) {
write.csv(
submission,
"data/submission.csv",
row.names = FALSE
)
}
